:root {
  --fc-color: hsl(204, 7%, 85%);
  --background-color: hsl(240, 3%, 7%);
  --border-color: hsl(240, 2%, 23%);
  --active-color: hsl(200, 1%, 34%);
  --wrong-bg-color: hsl(240, 2%, 23%);
  --wrong-location-bg-color: hsl(49, 51%, 47%);
  --correct-bg-color: hsl(115, 29%, 43%);
}

*,
*::after,
*::before {
  box-sizing: border-box;
}

body {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-family: Arial, sans-serif;
  background-color: var(--background-color);
  min-height: 100vh;
  padding: 1em;
  margin: 0;
  font-size: clamp(0.35rem, 2vmin, 1.3rem);
  position: relative;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  border-bottom: solid 1px var(--border-color);
  width: 40%;
  font-size: 2.3rem;
  font-weight: 800;
  color: var(--fc-color);
  letter-spacing: 0.05em;
  padding-bottom: 0.2em;
  margin-bottom: 1.5em;
}

button .large {
  font-size: clamp(0.35rem, 1.4vmin, 0.8rem);
}

.author,
.date {
  font-size: 0.8rem;
  letter-spacing: 0;
}

.keyboard {
  display: grid;
  grid-template-columns: repeat(20, minmax(auto, 1.25em));
  grid-auto-rows: 3.5em;
  gap: 0.5em 0.4em;
  justify-content: center;
}

.key {
  font-size: inherit;
  grid-column: span 2;

  background-color: hsl(
    var(--hue, 200),
    var(--saturation, 1%),
    calc(var(--lightness-offset, 0%) + var(--lightness, 51%))
  );

  border: none;
  border-radius: 4px;

  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0;
  text-transform: uppercase;
  color: var(--fc-color);
  fill: var(--fc-color);

  cursor: pointer;
}

.key.large {
  grid-column: span 3;
}

.key > svg {
  width: 1.75em;
  height: 1.75em;
}

.key:hover,
.key:focus {
  --lightness-offset: 10%;
}

.key:hover,
.key:focus {
  --lightness-offset: 10%;
}

.key.wrong {
  --lightness: 23%;
}

.key.wrong-location {
  --hue: 49;
  --saturation: 51%;
  --lightness: 47%;
}

.key.correct {
  --hue: 115;
  --saturation: 29%;
  --lightness: 43%;
}

.guess-grid {
  display: grid;
  grid-gap: 0.3em;
  grid-template: repeat(6, 4em) / repeat(5, 4em);
  justify-content: center;
  margin-bottom: 3em;
}

.tile {
  display: flex;
  justify-content: center;
  align-items: center;

  border: solid 2px var(--border-color);
  color: var(--fc-color);
  font-size: 1.6em;
  text-transform: uppercase;
  font-weight: bold;
  user-select: none;
  transition: transform 250ms linear;
}

.tile[data-state="active"] {
  border-color: var(--active-color);
}

.tile[data-state="wrong"] {
  border: none;
  background-color: var(--wrong-bg-color);
}

.tile[data-state="wrong-location"] {
  border: none;
  background-color: var(--wrong-location-bg-color);
}

.tile[data-state="correct"] {
  border: none;
  background-color: var(--correct-bg-color);
}

.alert-container {
  position: fixed;
  display: flex;
  flex-direction: column;
  align-items: center;

  gap: 0.6em;
  font-weight: 600;
  top: 15vh;
  right: 50vw;
  transform: translateX(50%);

  z-index: 1;
}

.alert {
  padding: 1em 0.8em;
  border-radius: 5px;
  background-color: white;
  color: black;
  opacity: 1;
  transition: opacity 350ms ease-in-out;
}

.alert.hide {
  opacity: 0;
}

.tile.shake {
  animation: shake 250ms ease-in-out;
}

.tile.flip {
  transform: rotateX(90deg);
}

.tile.dance {
  animation: dance 500ms ease-in-out;
}

.tile.idle {
  animation: idle 50ms ease-in-out;
}

@keyframes shake {
  10% {
    transform: translateX(-5%);
  }
  30% {
    transform: translateX(5%);
  }
  50% {
    transform: translateX(-7.5%);
  }
  70% {
    transform: translateX(7.5%);
  }
  90% {
    transform: translateX(5%);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes dance {
  20% {
    transform: translateY(-50%);
  }

  40% {
    transform: translateY(5%);
  }

  60% {
    transform: translateY(-25%);
  }

  80% {
    transform: translateY(2.5%);
  }

  90% {
    transform: translateY(-5%);
  }
  100% {
    transform: translateY(0%);
  }
}

@keyframes idle {
  20% {
    transform: scale(1.05);
  }

  40% {
    transform: scale(1.08);
  }

  60% {
    transform: scale(1.15);
  }

  80% {
    transform: scale(1.1);
  }

  90% {
    transform: scale(1.06);
  }
  100% {
    transform: scale(1);
  }
}
